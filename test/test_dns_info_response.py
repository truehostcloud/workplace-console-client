# coding: utf-8

"""
    Workplace Console API

    API for managing email and workplace service subscriptions.

    The version of the OpenAPI document: v1
    Contact: support@truehost.cloud
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from workplace_client.models.dns_info_response import DnsInfoResponse

class TestDnsInfoResponse(unittest.TestCase):
    """DnsInfoResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DnsInfoResponse:
        """Test DnsInfoResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DnsInfoResponse`
        """
        model = DnsInfoResponse()
        if include_optional:
            return DnsInfoResponse(
                domain = '',
                score = 1.337,
                all_dns_score = 1.337,
                found = 56,
                total = 56,
                missing_dns = [
                    workplace_client.models.dns_record.DnsRecord(
                        host = '', 
                        type = '', 
                        value = '', 
                        priority = '', 
                        ttl = 56, )
                    ],
                other_missing_dns = [
                    workplace_client.models.dns_record.DnsRecord(
                        host = '', 
                        type = '', 
                        value = '', 
                        priority = '', 
                        ttl = 56, )
                    ],
                found_dns = workplace_client.models.found_dns_records.FoundDnsRecords(
                    ns = [
                        ''
                        ], 
                    a = [
                        ''
                        ], 
                    aaaa = [
                        ''
                        ], 
                    cname = [
                        ''
                        ], 
                    mx = [
                        ''
                        ], 
                    txt = [
                        ''
                        ], 
                    soa = [
                        ''
                        ], 
                    srv = [
                        ''
                        ], 
                    ptr = [
                        ''
                        ], )
            )
        else:
            return DnsInfoResponse(
                domain = '',
                score = 1.337,
                all_dns_score = 1.337,
                found = 56,
                total = 56,
                missing_dns = [
                    workplace_client.models.dns_record.DnsRecord(
                        host = '', 
                        type = '', 
                        value = '', 
                        priority = '', 
                        ttl = 56, )
                    ],
                other_missing_dns = [
                    workplace_client.models.dns_record.DnsRecord(
                        host = '', 
                        type = '', 
                        value = '', 
                        priority = '', 
                        ttl = 56, )
                    ],
                found_dns = workplace_client.models.found_dns_records.FoundDnsRecords(
                    ns = [
                        ''
                        ], 
                    a = [
                        ''
                        ], 
                    aaaa = [
                        ''
                        ], 
                    cname = [
                        ''
                        ], 
                    mx = [
                        ''
                        ], 
                    txt = [
                        ''
                        ], 
                    soa = [
                        ''
                        ], 
                    srv = [
                        ''
                        ], 
                    ptr = [
                        ''
                        ], ),
        )
        """

    def testDnsInfoResponse(self):
        """Test DnsInfoResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
